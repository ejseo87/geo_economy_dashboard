# Product Requirement Document (PRD) - Current State

## 1. 프로젝트 개요

- 프로젝트 이름 : Geo Economy Dashboard
- 기술 스택 : Flutter 3.8.1+ (iOS, Android, Web, macOS, Linux, Windows)
- 백엔드 : Firebase (Core, Auth, Firestore, Storage)
- 상태관리 : Riverpod with code generation
- 현재 상황 : 개발 진행 중 - 기본 아키텍처 구축 완료, 핵심 기능 구현 중
- 목적 : 한국의 경제지표를 OECD 38개국과 비교하여 사용자가 한국의 현 상황을 쉽게 이해할 수 있게 돕는다.
- 타깃 사용자 : 공공데이터에 관심 있는 일반 사용자, 교사/학생, 기초 경제 기사 작성자, 정책/리서치 보조 인력
- 사용자 욕구 : "한국이 OECD에서 어느 위치인지"를 10초 안에 파악하고, 1분 안에 1~2개 지표를 비교해서 **공유/보고서에 바로 쓸 그림**을 얻기 위해

## 2. 현재 구현된 기능

### 2.1 인증 시스템 (Authentication)
- Firebase Auth 기반 로그인/회원가입 시스템
- 익명 접근 허용 (가입 없이도 기본 기능 이용 가능)
- 구현 상태: ✅ 완료

### 2.2 국가 선택 시스템 (Countries)
- OECD 국가 선택 기능
- 국가별 메타데이터 관리
- 선택된 국가 상태 관리 (Riverpod)
- 구현 상태: ✅ 완료

### 2.3 홈 대시보드 (Home)
- 3개 탭 구조:
  1. 국가 요약 탭 (Country Summary Tab) - 10초 정보
  2. AI 비교 탭 (AI Comparison Tab) - 1분 정보  
  3. 전체 지표 탭 (All Indicators Tab) - 5분 정보
- 국가 요약 카드 (Enhanced Country Summary Card)
- 경제 하이라이트 카드 (Economic Highlight Card)
- 추천 비교 카드 (Recommended Comparison Card)
- 스파크라인 차트 (Sparkline Chart)
- 구현 상태: 🔄 진행 중

### 2.4 월드뱅크 API 연동 (WorldBank)
- World Bank API 클라이언트 구현
- 지표 데이터 캐싱 시스템 (Firebase Firestore)
- 오프라인 캐시 서비스
- 지표 코드 정의 및 메타데이터
- 구현 상태: ✅ 기본 완료, 🔄 최적화 진행 중

### 2.5 즐겨찾기 시스템 (Favorites)
- 지표 및 비교 세트 북마크 기능
- 로컬 저장소 기반
- 구현 상태: 🔄 진행 중

### 2.6 알림 시스템 (Notifications)
- 로컬 알림 (flutter_local_notifications)
- 지표 업데이트 알림
- 구현 상태: 🔄 진행 중

### 2.7 공유 기능 (Share Services)
- 멀티플랫폼 공유 서비스 (모바일/웹 분리)
- 위젯을 이미지로 변환 (widgets_to_image)
- 갤러리 저장 기능 (gal)
- 구현 상태: ✅ 완료

### 2.8 설정 시스템 (Settings)
- 앱 설정 관리 (SharedPreferences)
- 사용자 프로필 관리
- 구현 상태: ✅ 완료

## 3. 핵심 아키텍처

### 3.1 기술 스택
- **Frontend**: Flutter 3.8.1+ (멀티플랫폼)
- **상태관리**: Riverpod with code generation (`@riverpod` annotations)
- **네비게이션**: GoRouter with authentication guards
- **백엔드**: Firebase (Core, Auth, Firestore, Storage)
- **데이터 클래스**: Freezed for immutable data models
- **네트워킹**: Dio HTTP client
- **캐싱**: Firebase Firestore + 로컬 캐시

### 3.2 프로젝트 구조
```
lib/
├── common/                 # 공통 유틸리티 및 위젯
├── constants/             # 디자인 시스템 상수 (색상, 타이포그래피)
├── features/              # 기능별 모듈화
│   ├── authentication/    # Firebase Auth 인증
│   ├── countries/         # 국가 선택 및 관리
│   ├── favorites/         # 북마크/즐겨찾기
│   ├── home/             # 메인 대시보드 (3개 탭)
│   ├── indicators/       # 지표 상세 정보
│   ├── notifications/    # 알림 시스템
│   ├── settings/         # 앱 설정
│   ├── users/           # 사용자 프로필
│   └── worldbank/       # World Bank API 연동
├── router/              # GoRouter 설정
└── main.dart           # 앱 진입점
```

### 3.3 디자인 시스템
- **색상 팔레트**: 
  - Primary: #0055A4 (파랑)
  - Accent: #00A86B (초록)
  - 성능 기반 색상 시스템 (긍정/부정/중립)
- **타이포그래피**: Noto Sans KR, Roboto
- **컴포넌트**: 일관된 카드 디자인 (12px radius, 16px padding)

## 4. 데이터 소스 및 지표

### 4.1 데이터 소스
- **Primary**: World Bank API (`https://api.worldbank.org/v2`)
- **Coverage**: OECD 38개국
- **캐싱**: Firebase Firestore + 로컬 캐시
- **업데이트 주기**: 지표별 상이 (월간/분기/연간)

### 4.2 핵심 지표 (구현 중)
현재 indicators_catalog.dart에 정의된 지표들을 기반으로:

#### 경제 성장/활동
- 실질 GDP 성장률 (`NY.GDP.MKTP.KD.ZG`)
- 1인당 GDP(PPP) (`NY.GDP.PCAP.PP.CD`)
- 제조업 부가가치 비중 (`NV.IND.MANF.ZS`)

#### 물가/통화
- CPI 인플레이션 (`FP.CPI.TOTL.ZG`)

#### 고용/노동
- 실업률 (`SL.UEM.TOTL.ZS`)
- 노동참가율 (`SL.TLF.CACT.ZS`)
- 고용률 (`SL.EMP.TOTL.SP.ZS`)

#### 재정/정부
- 정부지출 비중 (`NE.CON.GOVT.ZS`)
- 조세수입 (`GC.TAX.TOTL.GD.ZS`)

#### 대외경제
- 경상수지 (`BN.CAB.XOKA.GD.ZS`)
- 수출 비중 (`NE.EXP.GNFS.ZS`)
- 수입 비중 (`NE.IMP.GNFS.ZS`)

#### 환경/사회
- CO₂ 배출량 (`EN.ATM.CO2E.PC`)
- 재생에너지 비중 (`EG.FEC.RNEW.ZS`)

## 5. 현재 개발 상태

### 5.1 완료된 기능 ✅
- 기본 아키텍처 설정 (Flutter + Firebase + Riverpod)
- 인증 시스템 (로그인/회원가입)
- 국가 선택 시스템
- World Bank API 클라이언트
- 공유 기능 (이미지 저장/공유)
- 디자인 시스템 구축
- 멀티플랫폼 지원 설정

### 5.2 진행 중인 기능 🔄
- 홈 대시보드 3개 탭 구현
- 지표 데이터 시각화 (차트/스파크라인)
- 국가 요약 카드 완성
- 비교 시스템 고도화
- 캐싱 시스템 최적화

### 5.3 예정 기능 📋
- OECD 통계 계산 (백분위, 랭킹)
- 알림 시스템 완성
- 오프라인 모드 강화
- 성능 최적화
- 테스트 코드 작성

## 6. 기술적 특징

### 6.1 성능 최적화
- 코드 생성 기반 상태관리 (build_runner)
- 효율적인 캐싱 전략 (메모리 + 디스크 + 네트워크)
- 이미지 최적화 및 압축
- 오프라인 우선 아키텍처

### 6.2 사용자 경험
- 10초-1분-5분 정보 계층화
- 멀티플랫폼 일관된 UI/UX
- 접근성 고려 (색각 대응, 폰트 크기 조정)
- 직관적인 데이터 시각화

### 6.3 개발 생산성
- 코드 생성 자동화 (Riverpod, Freezed, JSON)
- 타입 안전성 보장
- 모듈화된 기능별 구조
- 일관된 코딩 컨벤션

## 7. 배포 및 플랫폼

### 7.1 지원 플랫폼
- ✅ iOS (Firebase 연동 완료)
- ✅ Android (Firebase 연동 완료) 
- ✅ Web
- ✅ macOS
- ✅ Linux
- ✅ Windows

### 7.2 배포 설정
- Firebase 프로젝트 연결 완료
- 멀티플랫폼 빌드 설정 완료
- Google Services 설정 완료 (iOS/Android)

## 8. 다음 단계 로드맵

### Phase 1: 핵심 기능 완성 (현재)
- [ ] 홈 대시보드 3개 탭 완성
- [ ] 지표 시각화 시스템 구축
- [ ] OECD 비교 통계 시스템
- [ ] 기본 테스트 작성

### Phase 2: 고도화 및 최적화
- [ ] 알림 시스템 완성
- [ ] 고급 비교 기능
- [ ] 성능 최적화
- [ ] 접근성 개선

### Phase 3: 확장 기능
- [ ] 추가 지표군 확장
- [ ] 고급 시각화
- [ ] 사용자 맞춤 기능
- [ ] 분석 및 인사이트

## 9. 개발 환경

### 9.1 필수 명령어
```bash
# 의존성 설치
flutter pub get

# 코드 생성 (Riverpod, Freezed 등)
dart run build_runner build

# 개발 서버 실행
flutter run

# 테스트 실행
flutter test
```

### 9.2 개발 규칙
- 영어 코드, 한국어 주석/문서
- Riverpod + Freezed 패턴 준수
- Firebase 보안 규칙 준수
- 코드 생성 후 커밋

## 10. 성공 지표 (예상)

### 10.1 기능적 지표
- 첫 화면 로딩 시간 < 2초
- API 응답 시간 < 1초
- 오프라인 모드 동작률 > 95%

### 10.2 사용자 지표 (출시 후)
- 첫 세션 즐겨찾기/공유 비율 > 30%
- 주요 플로우 전환율 > 25%  
- 7일 리텐션 > 15%

---

이 PRD는 현재 프로젝트 상태를 기반으로 작성되었으며, 개발 진행에 따라 지속적으로 업데이트됩니다.